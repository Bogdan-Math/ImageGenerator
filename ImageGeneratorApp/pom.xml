<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--parent version properties-->
    <parent>
        <groupId>ImageGenerator</groupId>
        <artifactId>ImageGenerator</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <!--module version properties-->
    <groupId>ImageGeneratorApp</groupId>
    <artifactId>ImageGeneratorApp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--packaging properties-->
    <name>ImageGeneratorApp</name>
    <packaging>war</packaging>

    <!--project properties and versions of modules-->
    <properties>

        <!--DB connection properties-->
        <db.driver>org.postgresql.Driver</db.driver>
        <db.url>jdbc:postgresql://ec2-54-83-3-101.compute-1.amazonaws.com:5432/dc5fi5culu6qch?sslmode=require</db.url>
        <db.user>iauijnmqfekyxc</db.user>
        <db.password>f06b19498d74b8ea8d3950d93d3e8ebed00757bc561f5daa1665993b7a22595a</db.password>
        <db.connection.pool.size>4</db.connection.pool.size>
        <db.connection.max.total>16</db.connection.max.total>

        <!--JETTY plugin configurations for integration tests-->
        <maven.jetty.plugin.version>9.4.7.v20170914</maven.jetty.plugin.version>
        <maven.jetty.webapp.route>/image-generator-app</maven.jetty.webapp.route>
        <maven.jetty.webapp.startPort>9090</maven.jetty.webapp.startPort>
        <maven.jetty.webapp.stopPort>9191</maven.jetty.webapp.stopPort>

        <maven.war.plugin.version>2.6</maven.war.plugin.version>
        <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>

        <!--dependencies versions-->
        <vaadin.version>8.0.0</vaadin.version>
        <vaadin.plugin.version>8.0.0</vaadin.plugin.version>
        <vaadin.spring.version>2.0.0</vaadin.spring.version>
        <servlet.api.version>3.1.0</servlet.api.version>
        <spring.version>4.3.3.RELEASE</spring.version>
        <selenium.firefox.driver.version>3.6.0</selenium.firefox.driver.version>
        <lombok.version>1.16.16</lombok.version>
        <maven.failsafe.plugin.version>2.20.1</maven.failsafe.plugin.version>
        <postgresql.version>42.1.4</postgresql.version>
        <commons.dbcp2.version>2.0</commons.dbcp2.version>
        <flyway.version>5.0.2</flyway.version>
    </properties>

    <!--build properties-->
    <build>
        <finalName>ImageGeneratorApp</finalName>

        <plugins>

            <!--.war build plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <!--Exclude an unnecessary file generated by the GWT compiler-->
                    <packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
                </configuration>
            </plugin>

            <!--VAADIN application builder plugin-->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>update-theme</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile</goal>
                            <!--Comment out compile-theme goal to use on-the-fly theme compilation-->
                            <goal>compile-theme</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--integration test runner plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--embedded web server JETTY manager plugin-->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${maven.jetty.plugin.version}</version>
                <configuration>
                    <webApp>
                        <contextPath>${maven.jetty.webapp.route}</contextPath>
                    </webApp>
                    <httpConnector>
                        <port>${maven.jetty.webapp.startPort}</port>
                    </httpConnector>
                    <stopPort>${maven.jetty.webapp.stopPort}</stopPort>
                    <stopKey>STOP</stopKey>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Flyway db migration plugin-->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <driver>${db.driver}</driver>
                    <url>${db.url}</url>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                </configuration>
                <executions>
                    <execution>
                        <id>flyway database migration</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!--<goal>clean</goal>--> <!--Drops all objects (tables, views, triggers, ...) in the configured schemas.-->
                            <goal>migrate</goal><!--Migrates the schema to the latest version-->
                            <goal>info</goal><!--Prints the details and status information about all the migrations.-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <!--Properties mapping (maven properties would be mapped to files in this paths)-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

    </build>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>ImageGeneratorUtility</groupId>
            <artifactId>ImageGeneratorUtility</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>ImageGeneratorCore</groupId>
            <artifactId>ImageGeneratorCore</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!--Vaadin (basic dependencies) UI Framework-->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
        </dependency>

        <!--Vaadin 8 + Spring 4.3.3.RELEASE (integration)-->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring</artifactId>
            <version>${vaadin.spring.version}</version>
        </dependency>

        <!--Servlet API - basic web API-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--Spring framework (tests)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!--Selenide framework (tests) - UI tests (based on Selenium)-->
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>selenide</artifactId>
            <version>4.10.01</version>
            <scope>test</scope>
        </dependency>

        <!--PostgreSQL (DB)-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!--Spring JDBC (library over core JDBC API)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--DB Connection Pool-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${commons.dbcp2.version}</version>
        </dependency>

        <!--Flyway - DB migration tool-->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>

    </dependencies>

</project>